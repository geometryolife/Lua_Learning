-- date 函数和 time 函数正好相反，一般情况下 date 主要是用于格式化时间。
-- 比如转化为特定的日期时间字符串，或者获取年、月、日以及星期等具体的信息。
-- date 函数也有两种调用方式，默认为不传参数，返回本地格式化的一个时间+日期的字符串。
-- 一般还是使用传入格式化参数的方法，用于获取满足需求的信息。
-- 返回本地格式化的日期时间字符串
-- os.date()
-- 返回 table
-- os.date(format, time)
--
-- 当 format=*t 时，返回的 table 为完整的字段信息，包括时间、日期、日在年中的位置、周几以及夏令信息等。如下所示：
print(os.date())
-- Sat Jan  8 20:00:28 2022

-- 返回 table 对象
local t = os.date("*t", os.time())
print(t)
-- table: 0x55e04c719ef0

for i, v in pairs(t) do print(i, v) end
-- wday    7
-- month   1
-- year    2022
-- sec     32
-- min     57
-- day     8
-- isdst   false
-- yday    8
-- hour    19

-- yday 描述了当前天在一年中是第几天，每年的1月1号为第一天；
-- wday 描述了当天的星期数，周日为第一天，即1表示周日。

-- date 函数对于格式提供了丰富的支持，应用格式可以完成任意的业务所要求的格式化日期，其支持的一些配置方式如下：
-- | 格式 | 描述                                                                   |
-- | %a   | 星期的英文缩写，如周二为Tue                                            |
-- | %A   | 星期的英文全写，如周二位Tuesday                                        |
-- | %b   | 月份的简写，如十二月为Dec                                              |
-- | %B   | 月份的全写，如十二月为December                                         |
-- | %c   | 日期+时间字符串，年份将缩写两位，12/24/19 09:40:30（2019），尽量不使用 |
-- | %d   | 月中的第几天，从1开始，表示第一天。取值[01~31]                         |
-- | %H   | 24小时制中的时，取值[00~23]                                            |
-- | %I   | 12小时制中的时(大写字母I)，取值[01~12]                                 |
-- | %j   | 指定日期在一年中是第几天，取值[001~366]，1月1号为第一天                |
-- | %M   | 指定时间的分钟数，取值[00~59]                                          |
-- | %m   | 月份，取值[01~12]                                                      |
-- | %p   | 上午am、下午pm。一般12小时制时需要                                     |
-- | %S   | 指定时间的秒数，取值[00~59]                                            |
-- | %w   | 指定时间在星期中的第几天，取值[0~6，周日~周六]，与t的取值差1*          |
-- | %X   | 时间字符串，24小时制。09:54:57                                         |
-- | %x   | 日期，年份两位表示，12/24/19，一般不要使用                             |
-- | %Y   | 完整年份，2019                                                         |
-- | %y   | 两位年份，不要使用，19                                                 |
-- | %%   | 转义输出%                                                              |
-- | *t   | 返回table，包含一个日期时间的完整描述                                  |

-- 打印当天的信息
local _WEEK = {
    "星期天", "星期一", "星期二", "星期三", "星期四",
    "星期五", "星期六"
}

-- 获取星期对应的中文
local function getWeek(date)
    local w = os.date("%w", date)
    return _WEEK[w + 1] -- Lua 下标从 1 开始
end
-- for i, v in pairs(_WEEK) do print(i, v) end

-- 获取时间戳，并存到变量 d 中
local d = os.time()

-- 自定义日期格式
local t = os.date("今天是%Y年%m月%d日，%X，", d)
-- 将自定义格式日期与中文星期拼接
t = t .. getWeek(d)

print(t)
-- 今天是2022年01月08日，20:22:56，星期六

-- 英文的转换相对更简单，因为可以直接输出年份、星期的完整英文名称。
-- 对于前端展示最多需求的 yyyy-MM-dd HH:mm:ss 结构，可以如下操作
print(os.date("%Y-%m-%d %H:%M:%S", os.time()))
-- 2022-01-08 22:13:58
